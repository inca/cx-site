# ORM: Central abstractions   {#abstractions}

Applications built with Circumflex ORM usually operate on following abstractions:

  * [`Record`](/products/orm/ddl/part_1.html#record) -- wraps a row in a database `Table` or `View`,
  encapsulates the database access and adds domain logic on that data;
  * [`Relation`](/products/orm/ddl/part_1.html#relation) -- encapsulates database object
  (`Table` or `View`) for corresponding `Record` and adds methods
  for [querying](/products/orm/querying/index.html#sql), [manipulating](/orm/dml.html#dml)
  and [validating](/products/orm/ddl/part_2.html#validation) its data;
  * `Field` -- corresponds to atomic data unit inside `Record` or database column in `Table`;
  * [`Association`](/products/orm/ddl/part_2.html#association) -- incapsulates `Field` which
  links one type of `Record` with another, this relationship is expressed by foreign keys in the database;
  * `Query` -- communicates with database either for [data retrieval](/orm/querying/index.html#sql) or
  [data manipulation](/products/orm/dml.html);
  * `SchemaObject` -- represents an abstract database object (such as trigger, index,
  constraint or stored procedure); tables and views are database objects, too.
