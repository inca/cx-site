# Quick Start  {#start}

## Use With Existing Projects  {#existing-projects}

If you already have a project and wish to use one of the Circumflex Scalate component, just
add the corresponding dependency to your project's `pom.xml`:

    <properties>                                                           {.xml}
      <cx.version><!-- desired version --></cx.version>
    </properties>
    <!-- Circumflex Scalate -->
    <dependency>
      <groupId>ru.circumflex</groupId>
      <artifactId>circumflex-scalate</artifactId>
      <version>{cx.version}</version>
    </dependency>

You should import this package if you intend to use Scalate in your web application:

    import ru.circumflex.scalate._

You can also use aliased imports to prevent collisions between method names:

    import ru.circumflex.{scalate => sc}    // import under alias "sc"
    sc.render("/path/to/template.ssp")      // access members

Here's the example usage from Circumflex Web Application:

    import ru.circumflex._, core._, web._, scalate._

    class Main extends RequestRouter {
       get("/hello/:name") = render("/templates/hello.ssp")
    }

Two methods are used for rendering: `render(template: String, statusCode: Int = 200, layout: Boolean = true)`
and `view(view: String, it: AnyRef)`. Consult [Scalate Documentation][scalate-doc] for more details.

By default, the `ServletTemplateEngine` is used which resolves templates from servlet context.
If you wish to use your own `TemplateEngine` implementation with the methods of `scalate` package,
just set the `scalate.engine` configuration parameter to fully-qualified class name of templage
engine implementation.

  [scalate-doc]: http://scalate.fusesource.org/documentation/user-guide.html